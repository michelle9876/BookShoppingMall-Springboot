server:
  port: 8080
logging:
  config: classpath:logback-spring-dev.xml
  level:
    org:
      hibernate:
        SQL: DEBUG

spring:
  config:
    activate:
      on-profile: dev
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  application:
    name: ecommerce
  datasource:
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://mariadb.cjq82ikaejvr.ap-northeast-2.rds.amazonaws.com:3306/project2?useUnicode=true&characterEncoding=UTF-8
  jpa:
    #database-platform: org.hibernate.dialect.MariaDBDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
    open-in-view: false

jwt:
  secret-key-source: ${JWT_SECRET_KEY}

cloud:
  aws:
    s3:
      buckets:
        bucket1:
          name: project2-profile
        bucket2:
          name: project2-book
    credentials:
      access-key: ${ACCESS_KEY}
      secret-key: ${SECRET_KEY}
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false

# ++ IamPort 추가!!
imp:
  v1:
    api:
      key: ${IMP_KEY}
      secret: ${IMP_SECRET_KEY}


springdoc:
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  packages-to-scan: com.github.super_coding.web.controller
  paths-to-match: /api/**
  use-management-port: false # Actuator 엔드포인트는 애플리케이션의 메인 포트가 아닌 관리(management) 포트에서만 문서화
  show-actuator: true
  # model-and-view-allowed: OpenAPI 설명에 ModelAndView 반환이 포함된 RestController가 표시되도록 허용합니다.
  cache:
    disabled: true
  api-docs:
    # path: /backend-docs # http://localhost:8080/backend-docs
    enabled: true # http://server:port/v3/api-docs path가 설정되어있다면 기존 도메인은 적용이 안된다.
    resolve-schema-properties: true
    groups:
      enabled: true
  swagger-ui:
    # path: /frontend-docs # http://localhost:8080/backend-docs
    enabled: true # http://server:port/swagger-ui.html path가 설정되어있다면 기존 도메인은 적용이 안된다.
    # config-url: /v3/api-docs/swagger-config
    validatorUrl: https://validator.swagger.io/validator
    filter: true
    groups-order: asc # desc
    tags-sorter: alpha
    operations-sorter: alpha # Method
    display-request-duration: true
    use-root-path: true # true로 설정한다면 root 도메인으로 접근한다면 swagger API문서를 보여준다. - 프로젝트에서 false로 설정
    # defaultModelRendering: ["example"*, "model"] # API가 처음 렌더링될 때 모델이 표시되는 방식입니다.
    csrf:
      enabled: true
        # persistAuthorization: true로 설정하면 인증 데이터가 유지되며 브라우저 닫기/새로 고침 시 손실되지 않습니다.
        # oauth:
        # useBasicAuthentication WithAccessCodeGrant: true
        # - accessCode 흐름에 대해서만 활성화됩니다.
        # tokenUrl에 대한 Authorization_code 요청 중에
      # HTTP 기본 인증 체계(기본 base64encode(client_id + client_secret)가 포함된 인증 헤더)를 사용하여 클라이언트 비밀번호를 전달합니다.